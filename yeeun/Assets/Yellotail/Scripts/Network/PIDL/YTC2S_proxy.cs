




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace YTC2S
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool RequestSignUp(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.String id, System.String password)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestSignUp;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, id);
		Yellotail.NettentionMarshaler.Write(__msg, password);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestSignUp, Common.RequestSignUp);
}

public bool RequestSignUp(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.String id, System.String password)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestSignUp;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, id);
Yellotail.NettentionMarshaler.Write(__msg, password);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestSignUp, Common.RequestSignUp);
}
public bool RequestSignIn(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.String id, System.String password)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestSignIn;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, id);
		Yellotail.NettentionMarshaler.Write(__msg, password);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestSignIn, Common.RequestSignIn);
}

public bool RequestSignIn(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.String id, System.String password)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestSignIn;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, id);
Yellotail.NettentionMarshaler.Write(__msg, password);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestSignIn, Common.RequestSignIn);
}
public bool RequestNicknameUsable(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.String nickname)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestNicknameUsable;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, nickname);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestNicknameUsable, Common.RequestNicknameUsable);
}

public bool RequestNicknameUsable(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.String nickname)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestNicknameUsable;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, nickname);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestNicknameUsable, Common.RequestNicknameUsable);
}
public bool RequestRoomCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.String roomName)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestRoomCreate;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, roomName);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestRoomCreate, Common.RequestRoomCreate);
}

public bool RequestRoomCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.String roomName)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestRoomCreate;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, roomName);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestRoomCreate, Common.RequestRoomCreate);
}
public bool RequestRoomJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int roomNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestRoomJoin;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, roomNumber);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestRoomJoin, Common.RequestRoomJoin);
}

public bool RequestRoomJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int roomNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestRoomJoin;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, roomNumber);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestRoomJoin, Common.RequestRoomJoin);
}
public bool RequestRoomLeave(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int roomNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestRoomLeave;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, roomNumber);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestRoomLeave, Common.RequestRoomLeave);
}

public bool RequestRoomLeave(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int roomNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestRoomLeave;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, roomNumber);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestRoomLeave, Common.RequestRoomLeave);
}
public bool RequestRoomList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestRoomList;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestRoomList, Common.RequestRoomList);
}

public bool RequestRoomList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestRoomList;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestRoomList, Common.RequestRoomList);
}
public bool RequestRoomUserList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int roomNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RequestRoomUserList;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, roomNumber);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RequestRoomUserList, Common.RequestRoomUserList);
}

public bool RequestRoomUserList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int roomNumber)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RequestRoomUserList;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, roomNumber);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RequestRoomUserList, Common.RequestRoomUserList);
}
public bool SystemChat(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SystemChat;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SystemChat, Common.SystemChat);
}

public bool SystemChat(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SystemChat;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SystemChat, Common.SystemChat);
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_RequestSignUp="RequestSignUp";
public const string RmiName_RequestSignIn="RequestSignIn";
public const string RmiName_RequestNicknameUsable="RequestNicknameUsable";
public const string RmiName_RequestRoomCreate="RequestRoomCreate";
public const string RmiName_RequestRoomJoin="RequestRoomJoin";
public const string RmiName_RequestRoomLeave="RequestRoomLeave";
public const string RmiName_RequestRoomList="RequestRoomList";
public const string RmiName_RequestRoomUserList="RequestRoomUserList";
public const string RmiName_SystemChat="SystemChat";
       
public const string RmiName_First = RmiName_RequestSignUp;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_RequestSignUp="";
public const string RmiName_RequestSignIn="";
public const string RmiName_RequestNicknameUsable="";
public const string RmiName_RequestRoomCreate="";
public const string RmiName_RequestRoomJoin="";
public const string RmiName_RequestRoomLeave="";
public const string RmiName_RequestRoomList="";
public const string RmiName_RequestRoomUserList="";
public const string RmiName_SystemChat="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

