




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace YTS2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool ResponseSignUp(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ResponseSignUp;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, result);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ResponseSignUp, Common.ResponseSignUp);
}

public bool ResponseSignUp(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ResponseSignUp;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, result);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ResponseSignUp, Common.ResponseSignUp);
}
public bool ResponseSignIn(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ResponseSignIn;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, result);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ResponseSignIn, Common.ResponseSignIn);
}

public bool ResponseSignIn(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ResponseSignIn;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, result);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ResponseSignIn, Common.ResponseSignIn);
}
public bool ResponseNicknameUsable(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ResponseNicknameUsable;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, result);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ResponseNicknameUsable, Common.ResponseNicknameUsable);
}

public bool ResponseNicknameUsable(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ResponseNicknameUsable;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, result);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ResponseNicknameUsable, Common.ResponseNicknameUsable);
}
public bool ResponseRoomCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ResponseRoomCreate;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, result);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ResponseRoomCreate, Common.ResponseRoomCreate);
}

public bool ResponseRoomCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ResponseRoomCreate;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, result);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ResponseRoomCreate, Common.ResponseRoomCreate);
}
public bool ResponseRoomJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ResponseRoomJoin;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, result);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ResponseRoomJoin, Common.ResponseRoomJoin);
}

public bool ResponseRoomJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ResponseRoomJoin;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, result);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ResponseRoomJoin, Common.ResponseRoomJoin);
}
public bool ResponseRoomLeave(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ResponseRoomLeave;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, result);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ResponseRoomLeave, Common.ResponseRoomLeave);
}

public bool ResponseRoomLeave(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int result)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ResponseRoomLeave;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, result);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ResponseRoomLeave, Common.ResponseRoomLeave);
}
public bool ResponseRoomList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.Collections.Generic.List<Yellotail.Common.RoomInfo> roomList)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ResponseRoomList;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, roomList);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ResponseRoomList, Common.ResponseRoomList);
}

public bool ResponseRoomList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.Collections.Generic.List<Yellotail.Common.RoomInfo> roomList)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ResponseRoomList;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, roomList);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ResponseRoomList, Common.ResponseRoomList);
}
public bool SystemChat(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SystemChat;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SystemChat, Common.SystemChat);
}

public bool SystemChat(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SystemChat;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SystemChat, Common.SystemChat);
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ResponseSignUp="ResponseSignUp";
public const string RmiName_ResponseSignIn="ResponseSignIn";
public const string RmiName_ResponseNicknameUsable="ResponseNicknameUsable";
public const string RmiName_ResponseRoomCreate="ResponseRoomCreate";
public const string RmiName_ResponseRoomJoin="ResponseRoomJoin";
public const string RmiName_ResponseRoomLeave="ResponseRoomLeave";
public const string RmiName_ResponseRoomList="ResponseRoomList";
public const string RmiName_SystemChat="SystemChat";
       
public const string RmiName_First = RmiName_ResponseSignUp;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ResponseSignUp="";
public const string RmiName_ResponseSignIn="";
public const string RmiName_ResponseNicknameUsable="";
public const string RmiName_ResponseRoomCreate="";
public const string RmiName_ResponseRoomJoin="";
public const string RmiName_ResponseRoomLeave="";
public const string RmiName_ResponseRoomList="";
public const string RmiName_SystemChat="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

