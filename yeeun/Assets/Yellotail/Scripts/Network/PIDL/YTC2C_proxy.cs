




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace YTC2C
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool P2PChat(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.String userName, System.String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.P2PChat;
		__msg.Write(__msgid);
		Yellotail.NettentionMarshaler.Write(__msg, userName);
		Yellotail.NettentionMarshaler.Write(__msg, message);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_P2PChat, Common.P2PChat);
}

public bool P2PChat(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.String userName, System.String message)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.P2PChat;
__msg.Write(__msgid);
Yellotail.NettentionMarshaler.Write(__msg, userName);
Yellotail.NettentionMarshaler.Write(__msg, message);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_P2PChat, Common.P2PChat);
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_P2PChat="P2PChat";
       
public const string RmiName_First = RmiName_P2PChat;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_P2PChat="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

